// Generated by view binder compiler. Do not edit!
package com.example.ihaws.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.ihaws.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChangepasswordBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button buttonChangePassword;

  @NonNull
  public final TextInputEditText currentPassword;

  @NonNull
  public final TextInputLayout etCurrentPassword;

  @NonNull
  public final TextInputLayout etNewPassword;

  @NonNull
  public final TextInputLayout etRetypeNewPassword;

  @NonNull
  public final TextInputEditText newPassword;

  @NonNull
  public final TextInputEditText retypeNewPassword;

  private FragmentChangepasswordBinding(@NonNull ScrollView rootView,
      @NonNull Button buttonChangePassword, @NonNull TextInputEditText currentPassword,
      @NonNull TextInputLayout etCurrentPassword, @NonNull TextInputLayout etNewPassword,
      @NonNull TextInputLayout etRetypeNewPassword, @NonNull TextInputEditText newPassword,
      @NonNull TextInputEditText retypeNewPassword) {
    this.rootView = rootView;
    this.buttonChangePassword = buttonChangePassword;
    this.currentPassword = currentPassword;
    this.etCurrentPassword = etCurrentPassword;
    this.etNewPassword = etNewPassword;
    this.etRetypeNewPassword = etRetypeNewPassword;
    this.newPassword = newPassword;
    this.retypeNewPassword = retypeNewPassword;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChangepasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChangepasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_changepassword, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChangepasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_change_password;
      Button buttonChangePassword = rootView.findViewById(id);
      if (buttonChangePassword == null) {
        break missingId;
      }

      id = R.id.current_password;
      TextInputEditText currentPassword = rootView.findViewById(id);
      if (currentPassword == null) {
        break missingId;
      }

      id = R.id.et_current_password;
      TextInputLayout etCurrentPassword = rootView.findViewById(id);
      if (etCurrentPassword == null) {
        break missingId;
      }

      id = R.id.et_new_password;
      TextInputLayout etNewPassword = rootView.findViewById(id);
      if (etNewPassword == null) {
        break missingId;
      }

      id = R.id.et_retype_new_password;
      TextInputLayout etRetypeNewPassword = rootView.findViewById(id);
      if (etRetypeNewPassword == null) {
        break missingId;
      }

      id = R.id.new_password;
      TextInputEditText newPassword = rootView.findViewById(id);
      if (newPassword == null) {
        break missingId;
      }

      id = R.id.retype_new_password;
      TextInputEditText retypeNewPassword = rootView.findViewById(id);
      if (retypeNewPassword == null) {
        break missingId;
      }

      return new FragmentChangepasswordBinding((ScrollView) rootView, buttonChangePassword,
          currentPassword, etCurrentPassword, etNewPassword, etRetypeNewPassword, newPassword,
          retypeNewPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
